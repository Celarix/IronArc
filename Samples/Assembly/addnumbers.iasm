main:
	mov QWORD 2048 ebp
	mov QWORD 2048 esp
	push QWORD str:0
	hwcall str:1
	hwcall str:2
	mov DWORD *ebp eax
	addl QWORD eax 4 eax
	movln ebp 4096 eax
	mov QWORD ebp esp
	push QWORD 4100
	push QWORD str:3
	hwcall str:1
	hwcall str:2
	mov DWORD *ebp+8 eax
	addl QWORD eax 4 eax
	mov QWORD ebp ebx
	addl QWORD ebx 8 ebx
	movln ebx 8192 eax
	mov QWORD ebp esp
	addl QWORD esp 8 esp
	push QWORD 8196
	mov QWORD *ebp eax
	subl QWORD eax 4 eax
	push DWORD *eax
	mov QWORD *ebp+8 eax
	subl QWORD eax 4 eax
	push DWORD *eax
	stackargs
	push QWORD *ebp
	push DWORD *ebp+16
	call convertStringToDigits
	stackargs
	push QWORD *ebp+8
	push DWORD *ebp+20
	call convertStringToDigits
	push DWORD 0
	push DWORD *ebp+16
	push DWORD *ebp+20
	cmp DWORD
	jgte main__if_0_true
	jlt main__if_0_false
	
main__if_0_true:
	mov DWORD *ebp+20 *ebp+24
	jmp main__if_0_after
	
main__if_0_false:
	mov DWORD *ebp+16 *ebp+24
	jmp main__if_0_after
	
main__if_0_after:
	push DWORD 0
	push DWORD *ebp+16
	push DWORD *ebp+20
	cmp DWORD
	jgte main__if_1_true
	jlt main__if_1_false
	
main__if_1_true:
	mov DWORD *ebp+16 *ebp+28
	jmp main__if_1_after
	
main__if_1_false:
	mov DWORD *ebp+20 *ebp+28
	jmp main__if_1_after
	
main__if_1_after:
	push QWORD 12292
	hwcall str:4
	push DWORD *ebp+28
	push DWORD *ebp+16
	cmp DWORD
	je main__copy_addend1
	jne main__copy_addend2

main__copy_after:
	push DWORD *ebp+16
	push DWORD 1
	sub DWORD
	pop DWORD eax
	push QWORD *ebp
	push QWORD eax
	add QWORD
	push DWORD *ebp+20
	push DWORD 1
	sub DWORD
	pop DWORD eax
	push QWORD *ebp+8
	push QWORD eax
	add QWORD
	push DWORD *ebp+28
	push DWORD 1
	sub DWORD
	pop DWORD eax
	push QWORD *ebp+32
	push QWORD eax
	add QWORD
	push BYTE 0
	push DWORD 0
	hwcall str:4
	jmp main__while_0_cmp

main__while_0_cmp:
	push DWORD *ebp+65
	push DWORD *ebp+24
	cmp DWORD
	jlt main__while_0_main
	jgte main__while_0_after
	
main__while_0_main:
	mov QWORD *ebp+40 eax
	push BYTE *eax
	mov QWORD *ebp+48 eax
	push BYTE *eax
	push BYTE *ebp+69
	push BYTE *ebp+70
	add BYTE
	push BYTE *ebp+64
	add BYTE
	push BYTE *ebp+71
	push BYTE 10
	cmp BYTE
	jgte main__if_2_true
	jlt main__if_2_false
	
main__if_2_true:
	modl BYTE *ebp+71 10 *ebp+71
	mov BYTE 1 *ebp+64
	jmp main__if_2_after
	
main__if_2_false:
	mov BYTE 0 *ebp+64
	jmp main__if_2_after
	
main__if_2_after:
	mov QWORD *ebp+56 eax
	mov BYTE *ebp+71 *eax
	decl QWORD *ebp+40 *ebp+40
	decl QWORD *ebp+48 *ebp+48
	decl QWORD *ebp+56 *ebp+56
	incl DWORD *ebp+65 *ebp+65
	subl QWORD esp 3 esp
	jmp main__while_0_cmp

main__while_0_after:
	stackargs
	push QWORD *ebp+32
	push DWORD *ebp+28
	call convertDigitsToString
	push QWORD *ebp+32
	push QWORD 4
	sub QWORD
	hwcall str:1
	end
	
main__copy_addend1:
	mov QWORD *ebp ecx
	subl QWORD ecx 4 ecx
	mov QWORD *ebp+32 edx
	subl QWORD edx 4 edx
	mov DWORD *ebp+16 eex
	addl QWORD eex 4 eex
	movln ecx edx eex
	mov QWORD 0 ecx
	mov QWORD 0 edx
	mov QWORD 0 eex
	jmp main__copy_after
	
main__copy_addend2:
	mov QWORD *ebp+8 ecx
	subl QWORD ecx 4 ecx
	mov QWORD *ebp+32 edx
	subl QWORD edx 4 edx
	mov DWORD *ebp+20 eex
	addl QWORD eex 4 eex
	movln ecx edx eex
	mov QWORD 0 ecx
	mov QWORD 0 edx
	mov QWORD 0 eex
	jmp main__copy_after
	
convertStringToDigits:
	push QWORD *ebp
	push DWORD 0
	jmp convertStringToDigits__while_0_cmp

convertStringToDigits__while_0_cmp:
	push DWORD *ebp+20
	push DWORD *ebp+8
	cmp DWORD
	jlt convertStringToDigits__while_0_main
	jgte convertStringToDigits__while_0_after

convertStringToDigits__while_0_main:
	mov QWORD *ebp+12 eax
	subl BYTE *eax 48 *eax
	incl QWORD *ebp+12 *ebp+12
	incl DWORD *ebp+20 *ebp+20
	jmp convertStringToDigits__while_0_cmp

convertStringToDigits__while_0_after:
	mov QWORD ebp esp
	ret
	
convertDigitsToString:
	push QWORD *ebp
	push DWORD 0
	jmp convertDigitsToString__while_0_cmp

convertDigitsToString__while_0_cmp:
	push DWORD *ebp+20
	push DWORD *ebp+8
	cmp DWORD
	jlt convertDigitsToString__while_0_main
	jgte convertDigitsToString__while_0_after

convertDigitsToString__while_0_main:
	mov QWORD *ebp+12 eax
	addl BYTE *eax 48 *eax
	incl QWORD *ebp+12 *ebp+12
	incl DWORD *ebp+20 *ebp+20
	jmp convertDigitsToString__while_0_cmp

convertDigitsToString__while_0_after:
	push QWORD *ebp
	push QWORD 4
	sub QWORD
	mov QWORD *ebp+24 eax
	mov DWORD *ebp+8 *eax
	mov QWORD ebp esp
	ret
	
strings:
	0: "Enter a number:"
	1: "Terminal::WriteLine"
	2: "Terminal::ReadLine"
	3: "Enter a second number:"
	4: "VSDebugger::Break"